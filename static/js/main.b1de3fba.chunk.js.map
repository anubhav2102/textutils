{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","react_default","a","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","Navbar","concat","react_router_dom","to","title","aria-label","aria-current","aboutText","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","defaultProps","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","msgs","setTimeout","body","components_Alert","react_router","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b1de3fba.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  // const [myStyle, setMyStyle] = useState({\r\n  //   color: \"white\",\r\n  //   backgroundColor: \"black\"\r\n  // })\r\n  // const [btnText, setBtnText] = useState(\"Enable Light Mode\")\r\n\r\n  // const toggleStyle = () => {\r\n  //   if (myStyle.color === \"white\") {\r\n  //     setMyStyle({\r\n  //       color: \"black\",\r\n  //       backgroundColor: \"white\",\r\n  //       border: \"1px solid white\"\r\n  //     })\r\n  //     setBtnText(\"Enable Dark Mode\")\r\n  //   }else{\r\n  //       setMyStyle({\r\n  //           color: \"white\",\r\n  //           backgroundColor: \"black\"\r\n  //         })\r\n  //         setBtnText(\"Enable Light Mode\")\r\n  //   }\r\n  // }\r\n  let myStyle = {\r\n    color: props.mode === 'dark'?'white':'#042743',\r\n    backgroundColor: props.mode === 'dark'?'rgb(36 74 104)':'white',\r\n    // border: '2px solid',\r\n    // borderColor: props.mode === 'dark'?'white':'#042743'\r\n  }\r\n  return (\r\n    <div className=\"container\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\r\n      <h1 className=\"my-3\">About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Analyze Your text </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n            Textutils gives you a way to analyze your text quickly and efficiently. Be it word count, character count or \r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Free to use </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n            TextUtils is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={myStyle}\r\n            >\r\n              <strong>Browser Compatible </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n            This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"container my-3\">\r\n        <button onClick={toggleStyle} type=\"button\" className=\"btn btn-primary my-3\">\r\n          {btnText}\r\n        </button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              // role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\nNavbar.defaultProps = { title: \"Set title here\", aboutText: \"About Us\" };\r\n","import React, {useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n\r\n    const handleDownClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\",\"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \")); \r\n      props.showAlert(\"Extra Spaces Removed\",\"success\");\r\n  }\r\n\r\n  const handleCopy = ()=>{\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Copied to clipboard!\",\"success\");\r\n}\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    \r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h1 className=\"mb-3\">{props.heading} </h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n          style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}}\r\n        ></textarea>\r\n      </div>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleDownClick}>Convert to Lowercase</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" id=\"myBox\" onClick={handleCopy}>Copy Text</button>\r\n      <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Clear Space</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words, {text.length} characters</p>\r\n        <p>{0.08*(text.split(\" \").filter((element)=>{return element.length!==0}).length)} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n    setAlert({\n      msgs: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\",\"success\")\n    }else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",\"success\")\n    }\n  }\n  return (\n    <>\n      <Router>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <Routes>\n            <Route path=\"/about\" element={<About mode={mode}/>}>\n            </Route>\n            <Route path=\"/\" element={<TextForm heading=\"Try TextUtils - Word Counter, Character Counter, Remove extra Spaces\"  mode={mode} showAlert={showAlert} />}>\n            </Route>\n          </Routes>\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}